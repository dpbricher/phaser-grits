// Generated by CoffeeScript 1.8.0
var Main;

Main = function() {
  var animsAtlas, cursors, game, legAnim, tileLayer, tileMap;
  tileMap = null;
  tileLayer = null;
  animsAtlas = null;
  legAnim = null;
  cursors = null;
  return game = new Phaser.Game(800, 600, Phaser.AUTO, "content-main", {
    preload: function() {
      game.load.tilemap("map", "data/map1.json", null, Phaser.Tilemap.TILED_JSON);
      game.load.image("map_tiles", "images/grits_master.png");
      return game.load.atlas("anims", "images/grits_effects.png", "data/grits_effects.json", null, Phaser.Loader.TEXTURE_ATLAS_JSON_HASH);
    },
    create: function() {
      game.physics.startSystem(Phaser.Physics.ARCADE);
      tileMap = game.add.tilemap("map");
      tileMap.addTilesetImage("grits_master", "map_tiles");
      tileLayer = tileMap.createLayer("floor");
      tileLayer.resizeWorld();
      animsAtlas = game.add.sprite(0, 0, "anims");
      animsAtlas.animations.add("large_explosion", Phaser.Animation.generateFrameNames("landmine_explosion_large_", 0, 29, ".png", 4), 25, true);
      animsAtlas.animations.play("large_explosion");
      legAnim = game.add.sprite(0, 0, "anims");
      legAnim.animations.add("walk_anim", Phaser.Animation.generateFrameNames("walk_down_", 0, 29, ".png", 4), 25, true);
      legAnim.animations.play("walk_anim");
      game.physics.arcade.enable(legAnim);
      legAnim.body.collideWorldBounds = true;
      cursors = game.input.keyboard.createCursorKeys();
      return game.camera.follow(legAnim);
    },
    update: function() {
      legAnim.body.velocity.x = legAnim.body.velocity.y = 0;
      if (cursors.right.isDown) {
        legAnim.body.velocity.x += 150;
      }
      if (cursors.left.isDown) {
        legAnim.body.velocity.x -= 150;
      }
      if (cursors.up.isDown) {
        legAnim.body.velocity.y -= 150;
      }
      if (cursors.down.isDown) {
        return legAnim.body.velocity.y += 150;
      }
    }
  });
};
